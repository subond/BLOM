#! /bin/csh -f 
cd $1
setenv CASE `./xmlquery --file env_case.xml CASE --value`
setenv CONFIG_OCN_FILE `./xmlquery CONFIG_OCN_FILE --value`
setenv CASEROOT `./xmlquery CASEROOT --value`
setenv SRCROOT `./xmlquery  SRCROOT --value`
setenv EXEROOT `./xmlquery  EXEROOT --value`
setenv OBJROOT `./xmlquery  OBJROOT --value`
setenv OCN_GRID `./xmlquery OCN_GRID --value`
setenv CONFIG_OCN_DIR `dirname $CONFIG_OCN_FILE`
setenv NTASKS_OCN `./xmlquery NTASKS_OCN --value`
setenv DIN_LOC_ROOT `./xmlquery DIN_LOC_ROOT --value`
setenv RUN_TYPE `./xmlquery RUN_TYPE --value`
setenv CASEBUILD `./xmlquery CASEBUILD --value`
setenv CCSM_CO2_PPMV `./xmlquery CCSM_CO2_PPMV --value`
setenv OCN_NCPL `./xmlquery OCN_NCPL --value`
setenv MICOM_COUPLING `./xmlquery MICOM_COUPLING --value`
setenv RUNDIR `./xmlquery  RUNDIR --value`
setenv MICOM_TRACER_MODULES `./xmlquery MICOM_TRACER_MODULES --value`
setenv MICOM_TURBULENT_CLOSURE `./xmlquery MICOM_TURBULENT_CLOSURE --value`
setenv HAMOCC_CFC `./xmlquery HAMOCC_CFC --value`
setenv HAMOCC_NATTRC `./xmlquery HAMOCC_NATTRC --value`
setenv HAMOCC_SEDBYPASS `./xmlquery HAMOCC_SEDBYPASS --value`
setenv HAMOCC_CISO `./xmlquery HAMOCC_CISO --value`
setenv GMAKE `./xmlquery GMAKE --value`
setenv GMAKE_J `./xmlquery  GMAKE_J --value`
setenv OCN_CO2_TYPE `./xmlquery OCN_CO2_TYPE --value`
setenv RUN_STARTDATE `./xmlquery RUN_STARTDATE --value`

cd $OBJROOT/ocn/obj

#------------------------------------------------------------------------------
# Set list of file paths and resolve C preprocessor macros
#------------------------------------------------------------------------------

cat >! Filepath << EOF1
$OBJROOT/ocn/obj/dimensions
$CASEROOT/SourceMods/src.micom
$SRCROOT/components/micom/ben02
$SRCROOT/components/micom/cesm
$SRCROOT/components/micom/drivers/cpl_share
$SRCROOT/components/micom/drivers/cpl_mct
$SRCROOT/components/micom/phy
EOF1

set turbclo = (`echo $MICOM_TURBULENT_CLOSURE`)
set tracers = (`echo $MICOM_TRACER_MODULES`)
set co2type = (`echo $OCN_CO2_TYPE`)

set cpp_ocn = "-DMPI"
if ($OCN_GRID == tnx2v1 || $OCN_GRID == tnx1.5v1 || $OCN_GRID == tnx1v1 || $OCN_GRID == tnx1v3 || $OCN_GRID == tnx1v4 || $OCN_GRID == tnx0.25v1 || $OCN_GRID == tnx0.25v3 || $OCN_GRID == tnx0.25v4) then
  set cpp_ocn = "$cpp_ocn -DARCTIC"
endif
if ($OCN_GRID == gx1v5 || $OCN_GRID == gx1v6 || $OCN_GRID == tnx1v1 || $OCN_GRID == tnx1v3 || $OCN_GRID == tnx1v4  ||$OCN_GRID == tnx0.25v1 || $OCN_GRID == tnx0.25v3 || $OCN_GRID == tnx0.25v4) then
  set cpp_ocn = "$cpp_ocn -DLEVITUS2X"
endif
if ($#turbclo != 0 || $#tracers != 0) then
  echo $SRCROOT/components/micom/trc >> Filepath
  set cpp_ocn = "$cpp_ocn -DTRC"
endif
if ($#turbclo != 0) then
  set twoeq = FALSE
  set oneeq = FALSE
  foreach option ($turbclo)
    if      ($option == twoeq) then
      set cpp_ocn = "$cpp_ocn -DTKE -DGLS"
      set twoeq = TRUE
    else if ($option == oneeq) then
      set cpp_ocn = "$cpp_ocn -DTKE"
      set oneeq = TRUE
    else if ($option == advection) then
      set cpp_ocn = "$cpp_ocn -DTKEADV"
    else if ($option == isodif) then
      set cpp_ocn = "$cpp_ocn -DTKEIDF"
    else
      echo $0": Turbulent closure option $option is not recognized!"
      exit -1
    endif
  end
  if ($twoeq == 'FALSE' && $oneeq == 'FALSE') then
    echo $0": For turbulent closure either twoeq or oneeq must be provided as options!"
    exit -1
  endif
  if ($twoeq == 'TRUE' && $oneeq == 'TRUE') then
    echo $0": Do not use both twoeq and oneeq as options for turbulent closure!"
    exit -1
  endif
endif
if ($#tracers != 0) then
  foreach module ($tracers)
    if      ($module == iage) then
      echo $SRCROOT/components/micom/idlage >> Filepath
      set cpp_ocn = "$cpp_ocn -DIDLAGE"
    else if ($module == ecosys) then
      echo $SRCROOT/components/micom/hamocc >> Filepath
      set cpp_ocn = "$cpp_ocn -DHAMOCC -DRESTART_BGC -DWLIN"
      if ($HAMOCC_CFC == TRUE) then
        set cpp_ocn = "$cpp_ocn -DCFC"
      endif       
      if ($HAMOCC_NATTRC == TRUE) then
        set cpp_ocn = "$cpp_ocn -DnatDIC"
      endif       
      if ($HAMOCC_SEDBYPASS == TRUE) then
        set cpp_ocn = "$cpp_ocn -Dsedbypass"
      endif       
      if ($HAMOCC_CISO == TRUE) then
        if($HAMOCC_SEDBYPASS == FALSE) then
          echo $0": HAMOCC C-isotopes currently not supported in the sediment module. Use HAMOCC_SEDBYPASS=TRUE."
          exit -1
        endif
        set cpp_ocn = "$cpp_ocn -Dcisonew"
      endif       
      if ($co2type == prognostic) then
        set cpp_ocn = "$cpp_ocn -DPROGCO2"
      else if ($co2type == diagnostic) then
        set cpp_ocn = "$cpp_ocn -DDIAGCO2"
      else if ($co2type != constant) then
        echo $0": CO2 type $co2type is not recognized!"
        exit -1
      endif
    else
      echo $0": tracer module $module is not recognized!"
      exit -1
    endif
  end
endif

#------------------------------------------------------------------------------
# Build the library
#------------------------------------------------------------------------------

gmake complib -j $GMAKE_J MODEL=micom COMPLIB=$LIBROOT/libocn.a MACFILE=$CASEROOT/Macros.$MACH USER_CPPDEFS="$cpp_ocn" -f $CASETOOLS/Makefile || exit 2

if !(-f $LIBROOT/libocn.a) then
  echo "ERROR: micom library not available"
  exit -1
endif

